name: build
on:
  push:
    paths:
      - ".github/workflows/**"
      - ".github/actions/**"
      - "args.gn"
      - "BUILD.gn"
      - "patch/**"
  workflow_dispatch:
env:
  ANGLE_Branch: 7151

jobs:
  build:
    runs-on: windows-2025
    permissions:
      id-token: write
      attestations: write
      contents: write
    strategy:
      matrix:
        arch: [x64, arm64]

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          arch: ${{ matrix.arch }}

      - name: Install Windows SDK Debugging Tools for ARM64
        if: matrix.arch == 'arm64'
        shell: pwsh
        run: |
          # Download and install Windows SDK with Debugging Tools for ARM64
          $sdkVersion = "10.0.26100.0"
          $installerUrl = "https://go.microsoft.com/fwlink/?linkid=2272610"
          $installerPath = "$env:TEMP\winsdksetup.exe"
          
          Write-Host "Downloading Windows SDK installer..."
          Invoke-WebRequest -Uri $installerUrl -OutFile $installerPath
          
          Write-Host "Installing Windows SDK Debugging Tools for ARM64..."
          Start-Process -FilePath $installerPath -ArgumentList "/features OptionId.WindowsDesktopDebuggers /quiet /norestart" -Wait -NoNewWindow
          
          Write-Host "Verifying installation..."
          $debuggerPath = "C:\Program Files (x86)\Windows Kits\10\Debuggers\arm64\dbghelp.dll"
          if (Test-Path $debuggerPath) {
            Write-Host "✓ Debugging Tools for ARM64 installed successfully"
          } else {
            Write-Host "⚠ Warning: dbghelp.dll not found at expected path"
          }

      - name: Create Dir
        shell: bash
        run: |
          mkdir -p angle
          mkdir -p $BuildDir
          mv args.gn $BuildDir
          if [ "${{ matrix.arch }}" == "arm64" ]; then
            echo "target_cpu = \"arm64\"" >> $BuildDir/args.gn
          else
            echo "target_cpu = \"x64\"" >> $BuildDir/args.gn
          fi

      - name: Fetch source
        working-directory: angle
        shell: bash
        run: |
          git init && git remote add origin https://github.com/google/angle.git
          git fetch --depth 1 origin chromium/$ANGLE_Branch
          git checkout chromium/$ANGLE_Branch
          git apply -v ../patch/chromium-$ANGLE_Branch-deps.patch

      - name: Restore source cache
        uses: actions/cache/restore@v4
        id: restore-src-cache
        with:
          path: |
            angle/build
            angle/buildtools
            angle/third_party
            angle/tools
          key: ${{ runner.os }}-${{ matrix.arch }}-src-cache-${{ env.ANGLE_Branch }}

      - name: Sync source
        working-directory: angle
        shell: bash
        run: |
          uv run --python 3.12 -- python scripts/bootstrap.py
          gclient sync -f -D -R

      - name: Save src cache immediately
        id: save-src-cache
        if: always() && steps.restore-src-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: ${{ steps.restore-src-cache.outputs.cache-primary-key }}
          path: |
            angle/build
            angle/buildtools
            angle/third_party
            angle/tools

      - name: Move Build.gn
        working-directory: ${{github.workspace}}
        shell: pwsh
        # git diff --patch > chromium-7151.patch
        run: Move-Item -Path "BUILD.gn" -Destination "angle/" -Force

      - name: Build ANGLE
        working-directory: angle
        shell: pwsh
        run: |
          gn gen $env:BuildDir
          autoninja -C $env:BuildDir libANGLE_static libGLESv2_static

      - name: Package ANGLE
        working-directory: ${{github.workspace}}
        shell: bash
        run: |
          cd $BuildDir/obj
          7z a -y -mx9 $ANGLEStaticName.7z libANGLE_static.lib libGLESv2_static.lib
          mv $ANGLEStaticName.7z $GITHUB_WORKSPACE

      - name: List dir
        working-directory: ${{github.workspace}}
        shell: bash
        run: ls -al .

      - uses: ./.github/actions/deploy
